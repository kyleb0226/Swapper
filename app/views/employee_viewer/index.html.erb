<!DOCTYPE html>
<html lang="en">
<head>
  <title>Employee Viewer</title>
</head>
<body>

<form action="<%= url_for(action: 'index') %>" method="get" class="filter-form">
  <div class="filter-group">
    <label for="job_title_filter">Filter by Job Title:</label>
    <select id="job_title_filter" name="job_title_filter">
      <option value="" selected>All</option>
      <% @job_titles.each do |title| %>
        <option value="<%= title %>"><%= title %></option>
      <% end %>
    </select>
  </div>

  <div class="filter-group">
    <label for="job_code_filter">Filter by Job Code:</label>
    <select id="job_code_filter" name="job_code_filter">
      <option value="" selected>All</option>
      <% @job_codes.each do |code| %>
        <option value="<%= code %>"><%= code %></option>
      <% end %>
    </select>
  </div>

  <div class="filter-group">
    <label for="current_location_filter">Employee Current Location:</label>
    <select id="current_location_filter" name="current_location_filter">
      <option value="" selected>All</option>
      <% @locations.each do |location| %>
        <option value="<%= location %>"><%= location %></option>
      <% end %>
    </select>
  </div>

  <div class="filter-group">
    <label for="desired_location_filter">Employee Desired Location:</label>
    <select id="desired_location_filter" name="desired_location_filter">
      <option value="" selected>All</option>
      <% @locations.each do |location| %>
        <option value="<%= location %>"><%= location %></option>
      <% end %>
    </select>
  </div>

  <button type="submit" class="filter-button">Apply Filters</button>
</form>



</div>

<table class="table table-bordered" id="employees-table">
  <thead class="table-dark">
    <tr>
      <th><a href="#" class="sort-link" data-sort="employee_name" data-sort-direction="asc">Employee Name</a></th>
      <th><a href="#" class="sort-link" data-sort="company_name" data-sort-direction="asc">Company Name</a></th>
      <th><a href="#" class="sort-link" data-sort="job_title" data-sort-direction="asc">Job Title</a></th>
      <th><a href="#" class="sort-link" data-sort="job_code" data-sort-direction="asc">Job Code</a></th>
      <th><a href="#" class="sort-link" data-sort="current_location" data-sort-direction="asc">Current Location</a></th>
      <th><a href="#" class="sort-link" data-sort="desired_location" data-sort-direction="asc">Desired Location</a></th>
      <th><a href="#" class="sort-link" data-sort="seniority" data-sort-direction="asc">Seniority</a></th>
    </tr>
  </thead>
  <tbody>
    <% @employees.where(company_name: Current.user.company_name).each do |employee| %>
      <tr>
        <td><%= employee.employee_name %></td>
        <td><%= employee.company_name %></td>
        <td><%= employee.job_title %></td>
        <td><%= employee.job_code %></td>
        <td><%= employee.current_location ? employee.current_location.name : 'N/A' %></td>
        <td><%= employee.desired_location ? employee.desired_location.name : 'N/A' %></td>
        <td><%= employee.seniority %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const table = document.getElementById('employees-table');
  
  // Function to sort the table rows
  function sortTable(columnIndex, ascending) {
    const rows = Array.from(table.querySelectorAll('tbody tr'));
    rows.sort((a, b) => {
      const aValue = a.children[columnIndex].innerText.trim();
      const bValue = b.children[columnIndex].innerText.trim();
      if (isNaN(parseFloat(aValue))) {
        return ascending ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);
      } else {
        return ascending ? parseFloat(aValue) - parseFloat(bValue) : parseFloat(bValue) - parseFloat(aValue);
      }
    });
    table.querySelector('tbody').innerHTML = '';
    rows.forEach(row => table.querySelector('tbody').appendChild(row));
  }

  // Add click event listeners to each sort link
  table.querySelectorAll('.sort-link').forEach(function(link) {
    link.addEventListener('click', function(e) {
      e.preventDefault();

      // Get the sorting attribute from the data-sort attribute
      const sortAttribute = this.getAttribute('data-sort');
      
      // Get the current sorting direction from the data-sort-direction attribute
      const currentSortDirection = this.getAttribute('data-sort-direction') || 'asc';
      
      // Determine the new sorting direction
      const newSortDirection = currentSortDirection === 'asc' ? 'desc' : 'asc';
      
      // Update the data-sort-direction attribute
      this.setAttribute('data-sort-direction', newSortDirection);
      
      // Sort the table
      sortTable(Array.from(this.parentNode.parentNode.children).indexOf(this.parentNode), newSortDirection === 'asc');
    });
  });
});
</script>
</body>
</html>
